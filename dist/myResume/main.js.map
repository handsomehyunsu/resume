{"version":3,"sources":["./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/projects/posts.module.ts","./src/app/components/error/error.component.ts","./src/app/components/error/error.component.html","./src/environments/environment.ts","./src/app/components/projects/content-form/content-form.component.ts","./src/app/components/projects/content-form/content-form.component.html","./src/app/services/post.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/interceptor/auth-interceptor.ts","./src/app/components/projects/contents/contents.component.ts","./src/app/components/projects/contents/contents.component.html","./src/app/services/auth.service.ts","./src/app/interceptor/error-interceptor.ts","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/auth-guard/auth.guard.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(){\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authListenerSubs = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n      });\n    }\n\n  onLogout(){\n    this.authService.logout();\n  }\n\n  ngOnDestroy(){\n    this.authListenerSubs.unsubscribe();\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light fixed-top\" style=\"background-color: white;\" id=\"mainNav\">\n    <div class=\"container\">\n        <a class=\"navbar-brand js-scroll-trigger h-58\" routerLink=\"/\"><img src=\"assets/img/logo2.png\" alt=\"\" /></a>\n        <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul class=\"navbar-nav ml-auto\">\n                <li *ngIf=\"!userIsAuthenticated\" class=\"nav-item\">\n                    <a class=\"nav-link js-scroll-trigger\" routerLink=\"/auth/login\" routerLinkActive=\"mat-accent\">Login</a>\n                </li>\n                <li *ngIf=\"!userIsAuthenticated\" class=\"nav-item\">\n                    <a class=\"nav-link js-scroll-trigger\" routerLink=\"/auth/signup\" routerLinkActive=\"mat-accent\">Sign Up</a>\n                </li>\n                <li *ngIf=\"userIsAuthenticated\" class=\"nav-item\">\n                    <a class=\"nav-link js-scroll-trigger\" (click)=\"onLogout()\">Logout</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</nav>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AngularMaterialModule } from '../../angular-material.module';\nimport { CommonModule } from '@angular/common';\n\nimport { ContentsComponent } from './contents/contents.component';\nimport { ContentFormComponent } from './content-form/content-form.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    ContentsComponent,\n    ContentFormComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    RouterModule\n  ]\n})\n\nexport class PostModule{}","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    templateUrl: './error.component.html'\n})\n\nexport class ErrorComponent{\n    constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}){}\n}","<h1 mat-dialog-title>An Error Occurred!</h1>\n<div mat-dialog-content>\n  <p class=\"mat-body-1\">{{ data.message }}</p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>Okay</button>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  // localUrl: \"http://localhost:3000\"\n  localUrl: \" https://hyunsukimmyresume.herokuapp.com/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Output, Input, ViewChild } from '@angular/core';\nimport { PostService } from '../../../services/post.service';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { Post } from '../../../models/Post';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\n\n\n@Component({\n  selector: 'app-content-form',\n  templateUrl: './content-form.component.html',\n  styleUrls: ['./content-form.component.scss']\n})\nexport class ContentFormComponent implements OnInit {\n  posts: Post[]\n  post: Post;\n  isLoading = false;\n  private mode = 'create'; //edit\n  private postId: string; //edi\n\n  postFormGroup : FormGroup;\n  // @ViewChild('postForm') form: any; //html에서 사용한 #와 일치해야함\n\n\n  //ActivatedRoute\n  //현재 active된 route를 감지하여 파라미터값을 전달받는다.\n  constructor(\n    public postService: PostService, \n    public route: ActivatedRoute\n    ) { }\n\n  ngOnInit(){\n    this.postFormGroup = new FormGroup({\n      projectName: new FormControl(''),\n      language: new FormControl(''),\n      term: new FormControl(''),\n      description: new FormControl('')\n    });\n\n    //라우팅 규칙에 정의된 라우팅 변수를 map 타입의 Observable로 표현\n    //맵을 사용하면 라우팅 규칙에 포함된 라우팅 인자를 한 번에 모두 가져올 수도 있음\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if(paramMap.has('postId')){\n        this.mode = 'edit';\n        this.postId = paramMap.get('postId');\n        this.isLoading = true;\n        this.postService.getPost(this.postId).subscribe(postData => {\n          this.isLoading = false;\n          this.postFormGroup.patchValue({\n            id: postData._id, \n            projectName: postData.projectName,\n            language: postData.language,\n            term: postData.term,\n            description: postData.description,\n            creator: postData.creator\n          });\n        });\n        console.log(this.postFormGroup);\n      }else{\n        this.mode = 'create';\n        this.postId = null;\n      }\n    });\n  }\n\n  onSubmit(){\n    this.post = this.postFormGroup.value\n    console.log(this.post);\n    if(this.mode === 'create'){\n      this.postService.addPost(\n        this.post.projectName,\n        this.post.language,\n        this.post.term,\n        this.post.description);\n    }else{\n      this.postService.updatePost(\n        this.postId,\n        this.post.projectName,\n        this.post.language,\n        this.post.term,\n        this.post.description);\n    }\n    this.postFormGroup.reset();\n  }\n    \n}\n","<div class=\"container\" id=\"card_top\">\n    <div class=\"spinner-border\" role=\"status\" *ngIf=\"isLoading\">\n        <span class=\"sr-only\">Loading...</span>\n    </div>\n<div class=\"card card-body\" >\n    <form [formGroup]=\"postFormGroup\" (submit)=\"onSubmit()\" *ngIf=\"!isLoading\">\n        <div class=\"form-group\">\n          <label for=\"inputText\">Project Name</label>\n          <input type=\"text\"  class=\"form-control\" formControlName=\"projectName\">\n        </div>\n      <div class=\"form-group\">\n        <label for=\"inputLanguage\">Language</label>\n        <input type=\"text\"  class=\"form-control\" formControlName=\"language\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"inputTerm\">Term</label>\n        <input type=\"text\"  class=\"form-control\" formControlName=\"term\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"inputDescription\">Description</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"description\">\n      </div>\n     <button class=\"btn text-white btn-xl text-uppercase float-right\" style=\"background-color: #5fbae9;\" type=\"submit\">Add</button>\n     </form>\n</div>\n</div>\n    \n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nimport { environment } from \"../../environments/environment\";\n\nimport { Post } from '../models/Post';\n\nconst postUrl = environment.localUrl + \"/posts/\"\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\n//비슷한 기능들을 묶어 코드의 중복 제거, 컴포넌트 간 데이터 중개\nexport class PostService {\n  //post init\n  private posts : Post[] =[];\n  private postsUpdated = new Subject<Post[]>();\n\n  constructor(private http: HttpClient, private router: Router) { \n    //컨스트럭터의 매게변수로 받으면 앵귤러가 자동으로 서비스객체를 생성(new Http())해서 해당 클래스 속성으로 부여해줌\n  }\n\n  getPosts(){\n    this.http.get<{posts: any}>(postUrl)\n    .pipe(map((postData) => {\n      return postData.posts.map(post => {\n        return {\n          projectName: post.projectName,\n          language: post.language,\n          term: post.term,\n          description: post.description,\n          id: post._id,\n          creator: post.creator\n        };\n      });\n    }))\n      .subscribe(transformedPosts => {\n        console.log(transformedPosts);\n        this.posts = transformedPosts;\n        this.postsUpdated.next([...this.posts]);\n      });\n  }\n\n  getPostUpdatedLintenr(){\n    return this.postsUpdated.asObservable();\n  }\n\n  getPost(id: string){\n    return this.http.get<{_id: string, projectName: string, language: string, term: string, description: string, creator: string}>(\n      postUrl + id\n      );\n  }\n\n  addPost(projectName: string, language: string, term: string, description: string){\n    const post: Post = {id: null, projectName: projectName, language: language, term: term, description: description, creator: null};\n    this.http\n      .post<{postId: string}>(postUrl, post)\n      .subscribe(responseData => {\n        const id = responseData.postId;\n        post.id = id;\n        this.posts.push(post);\n        this.postsUpdated.next([...this.posts]);\n        this.router.navigate([\"/\"]);\n      });\n  }\n\n  updatePost(id: string, projectName: string, language: string, term: string, description: string){\n    const post: Post = {id: id, projectName: projectName, language: language, term: term, description: description, creator: null};\n    this.http.put(postUrl + id, post)\n      .subscribe(response => {\n        const updatedPosts = [...this.posts];\n        const oldPostIndex = updatedPosts.findIndex(p => p.id === post.id);\n        updatedPosts[oldPostIndex] = post;\n        this.posts = updatedPosts;\n        this.postsUpdated.next([...this.posts]);\n        this.router.navigate([\"/\"]);\n      });\n  }\n\n  deletePost(postId: string){\n    this.http.delete(postUrl + postId)\n    .subscribe(() => {\n      //왜 find는 못사용할까????\n      //const updatedPost = this.posts.find(post => post.projectName != postProjectName);\n      const updatedPost = this.posts.filter(post => post.id != postId);\n      this.posts = updatedPost;\n      this.postsUpdated.next([...this.posts]);\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService){}\n\n  ngOnInit(){\n    this.authService.autoAuthUser();\n  }\n}\n","<app-header></app-header>\n<div class=\"view\">\n\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { AuthInterceptor } from './interceptor/auth-interceptor';\nimport { ErrorInterceptor } from './interceptor/error-interceptor';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { PostModule } from './components/projects/posts.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ErrorComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    PostModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent]\n})\nexport class AppModule { }\n","import { HttpInterceptor } from '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler } from '@angular/common/http';\n\nimport { AuthService } from '../services/auth.service';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    constructor(private authService: AuthService){}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler){\n        const authToken = this.authService.getToken();\n        const authRequest = req.clone({\n            headers: req.headers.set('Authorization', \"Bearer \" + authToken)\n        });\n        return next.handle(authRequest);\n    }\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Post } from '../../../models/Post';\nimport { PostService } from '../../../services/post.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-contents',\n  templateUrl: './contents.component.html',\n  styleUrls: ['./contents.component.scss']\n})\nexport class ContentsComponent implements OnInit, OnDestroy {\n\n  // post:Post = {\n  //   id: '',\n  //   projectName: '',\n  //   language: '',\n  //   term: '',\n  //   description: ''\n  // }\n\n  posts: Post[] =[];\n  private postsSub: Subscription;\n  userIsAuthenticated = false;\n  userId: string;\n  private isLoading = false;\n  private authStatusSub: Subscription;\n\n  // showAddPostForm: boolean = false;\n \n  constructor(public postService: PostService, private authServie: AuthService) { }\n\n  ngOnInit() {\n    this.postService.getPosts();\n    this.userId = this.authServie.getUserId();\n    this.postsSub = this.postService.getPostUpdatedLintenr().subscribe((posts: Post[]) => { \n      this.posts = posts;\n    });\n    this.userIsAuthenticated = this.authServie.getIsAuth();\n    this.authStatusSub = this.authServie\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n        this.userId = this.authServie.getUserId();\n      });\n    }\n\n  onDelete(postId: string){\n    this.postService.deletePost(postId);\n    this.authStatusSub.unsubscribe();\n  }\n\n  ngOnDestroy(){\n    this.postsSub.unsubscribe();\n  }\n\n  \n}\n","<!-- About Me -->\n<section id=\"card_top\" class=\"page-section card card-body\">\n<div class=\"container text-center mb-3\" id=\"About\">\n  <div class=\"row\">\n      <img class=\"col-md-4 rounded-circle img-fluid \" src=\"assets/img/logo.png\">\n    <div class=\"col-sm-8\">\n      <h1 class=\"text-secondary\">Hyunsu Kim</h1>\n      <h4 class=\"text-secondary\">Web Developer</h4>\n    </div>\n  </div>\n</div>\n</section>\n\n<!-- Projects -->\n<section class=\"page-section bg-light card card-body\" id=\"Projects\">\n  <div class=\"container\">\n<div class=\"container\">\n  <h2 class=\"page-section-heading text-center text-uppercase text-secondary\">Projects</h2>\n <ul class=\"list-group list-group-flush\" *ngFor=\"let post of posts\">\n    <li class=\"card card-body mb-1\">\n      <div class=\"row\">\n        <div class=\"col-6\"><h2>{{ post.projectName }}</h2></div>\n        <div class=\"col-6\"><h5 class=\"float-right\">{{ post.term }}</h5></div>\n      </div>\n      <p class=\"text-black-50 mb-0\">{{ post.language }}</p>\n      <p class=\"text-black-50 mb-0\">{{ post.description }}</p>  \n      <div *ngIf=\"userIsAuthenticated && userId === post.creator\">\n        <button (click)=\"onDelete(post.id)\" class=\"btn text-white btn-xl text-uppercase float-right\" style=\"background-color: #5fbae9;\">delete</button>\n        <button class=\"btn text-white btn-xl text-uppercase float-right mr-2\" style=\"background-color: #5fbae9;\" [routerLink]=\"['/edit', post.id]\">Edit</button>\n      </div>\n    </li>\n </ul>\n</div>\n\n<div class=\"container\">\n<!-- <button (click)=\"showAddPostForm = !showAddPostForm\" class=\"btn text-white btn-xl text-uppercase float-right mt-2\" style=\"background-color: #5fbae9;\">New Post</button> -->\n<a *ngIf=\"userIsAuthenticated\" class=\"btn text-white btn-xl text-uppercase float-right mt-2\" style=\"background-color: #5fbae9;\" routerLink=\"/create\">New Post</a>\n</div>\n</div>\n</section>\n\n<!-- Skills -->\n<section class=\"page-section card card-body\">\n  <div class=\"container\">\n      <h2 class=\"page-section-heading text-center text-uppercase text-secondary\">Skills</h2>\n      <ul class=\"list-group list-group-flush\">\n        <li class=\"card card-body mb-1\">\n          <div class=\"row\">\n            <div class=\"col-4\"><img class=\"rounded-sm h-75 float-middle\" src=\"assets/img/java.png\"></div>\n            <div class=\"col-4\"><img class=\"rounded-sm h-75\" src=\"assets/img/nodejs.png\" ></div>\n            <div class=\"col-4\"><img class=\"rounded-sm h-75\" src=\"assets/img/angular.png\" ></div>\n          </div>\n        </li>\n      </ul>\n      <div class=\"text-center mt-4\">\n        <button class=\"btn text-white btn-xl text-uppercase float-center\" style=\"background-color: #5fbae9;\" type=\"submit\">Send Message</button>\n      </div>\n  </div>\n</section>\n","import { fromEventPattern, Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { environment } from \"../../environments/environment\";\nimport { AuthData } from '../models/auth-data.model';\n\nconst postUrl = environment.localUrl + \"/user/\"\n\n\n@Injectable({ providedIn: \"root\" })\nexport class AuthService {\n    private isAuthenticated = false;\n    private token: string;\n    private tokenTimer: any;\n    private userId: string;\n    private authStatusListener = new Subject<boolean>();\n\n    constructor(private http: HttpClient, private router: Router){}\n\n    getToken(){\n        return this.token;\n    }\n\n    getIsAuth(){\n        return this.isAuthenticated;\n    }\n\n    getUserId(){\n        return this.userId;\n    }\n\n    getAuthStatusListener(){\n        return this.authStatusListener.asObservable();\n    }\n\n    createUser(userName: string, password: string){\n        const authData: AuthData = {userName: userName, password: password};\n        this.http.post(postUrl + \"/signup\", authData)\n            .subscribe(() => {\n                this.router.navigate([\"/\"]);\n            }, error => {\n                console.log(\"auth.service.creatorUser() error\");\n                this.authStatusListener.next(false);\n            });\n    }\n\n    login(userName: string, password: string){\n        const authData: AuthData = {userName: userName, password: password};\n        this.http.post<{token: string, expiresIn: number, userId: string}>(\n            postUrl + \"/login\",\n            authData)\n        .subscribe(response => {\n            const token = response.token;\n            this.token = token;\n            if(token){\n                const expiresInDuration = response.expiresIn;\n                this.setAuthTimer(expiresInDuration);\n                this.isAuthenticated = true;\n                this.userId = response.userId;\n                this.authStatusListener.next(true);\n                const now = new Date();\n                const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\n                this.saveAuthData(token, expirationDate, this.userId);\n                this.router.navigate(['/']);\n            }\n        }, error => {\n            this.authStatusListener.next(false);\n        })\n    }\n\n    //\n    autoAuthUser(){\n        const authInformation = this.getAuthData();\n        if(!authInformation){\n            return;\n        }\n        const now = new Date();\n        const expiresIn = authInformation.expirationData.getTime() - now.getTime();\n        if(expiresIn > 0){\n            this.token = authInformation.token;\n            this.isAuthenticated = true;\n            this.userId = authInformation.userId;\n            this.setAuthTimer(expiresIn / 1000)\n            this.authStatusListener.next(true);\n        }\n    }\n\n    logout(){\n        this.token = null;\n        this.isAuthenticated = false;\n        this.authStatusListener.next(false);\n        clearTimeout(this.tokenTimer);\n        this.clearAuthData();\n        this.userId = null;\n        this.router.navigate(['/']);\n    }\n\n    private setAuthTimer(duration: number){\n        this.tokenTimer = setTimeout(() => {\n            this.logout();\n          }, duration * 1000);\n    }\n\n    private saveAuthData(token: string, expirationData: Date, userId: string){\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expiration\", expirationData.toISOString());\n        localStorage.setItem(\"userId\", userId);\n    }\n\n    private clearAuthData(){\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"expiration\");\n        localStorage.removeItem(\"userId\");\n    }\n\n\n    private getAuthData(){\n        const token = localStorage.getItem(\"token\");\n        const expirationDate = localStorage.getItem(\"expiration\");\n        const userId = localStorage.getItem(\"userId\");\n        if(!token || !expirationDate){\n            return;\n        }\n        return{\n            token: token,\n            expirationData: new Date(expirationDate),\n            userId: userId\n        }\n    }\n}","import {\n    HttpRequest,\n    HttpHandler,\n    HttpErrorResponse,\n    HttpInterceptor\n} from \"@angular/common/http\";\nimport { catchError } from \"rxjs/operators\";\nimport { throwError } from \"rxjs\";\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ErrorComponent } from '../components/error/error.component';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n    constructor(private dialog: MatDialog) {}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler){\n        return next.handle(req).pipe(\n            catchError((error: HttpErrorResponse) => {\n                console.log(\"error interceptor error \" + error.error.message);\n                let errorMessage = \"unknown error\";\n                if(error.error.message){\n                    errorMessage = error.error.message;\n                    console.log(\"애미뒤진에러 도대체 어디야 \" + errorMessage);\n                }\n                console.log(\"error?!\");\n                this.dialog.open(ErrorComponent, {data: {message: errorMessage}});\n                \n                return throwError(error);\n            })\n        );\n    }\n}","import { NgModule } from '@angular/core';\n\nimport { MatDialogModule } from '@angular/material/dialog';\n\n\n@NgModule({\n  exports: [\n    MatDialogModule,\n    \n  ]\n})\n\nexport class AngularMaterialModule {\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContentsComponent } from './components/projects/contents/contents.component';\nimport { ContentFormComponent } from './components/projects/content-form/content-form.component';\nimport { AuthGuard } from './auth-guard/auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: ContentsComponent },\n  { path: 'create', component: ContentFormComponent, canActivate: [AuthGuard] },\n  { path: 'edit/:postId', component: ContentFormComponent, canActivate: [AuthGuard] },\n  { path: \"auth\", loadChildren: () => import('./components/auth/auth.module').then(m => m.AuthModule)}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { \n    ActivatedRouteSnapshot, \n    CanActivate, \n    Router, \n    RouterStateSnapshot, \n    UrlTree \n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate{\n    constructor(private authService: AuthService, private router: Router){}\n\n    canActivate(\n        route: ActivatedRouteSnapshot, \n        state: RouterStateSnapshot\n        ): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n        const isAuth = this.authService.getIsAuth();\n        if(!isAuth){\n          this.router.navigate(['/auth/login']);\n        }\n        return isAuth;\n    }\n\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}