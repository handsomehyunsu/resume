{"version":3,"sources":["./src/app/components/auth/signup/signup.component.ts","./src/app/components/auth/signup/signup.component.html","./src/app/components/auth/login/login.component.ts","./src/app/components/auth/login/login.component.html","./src/app/components/auth/auth.module.ts","./src/app/components/auth/auth-routing.module.ts"],"names":[],"mappings":"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","file":"components-auth-auth-module.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { AuthData } from '../../../models/auth-data.model';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  user: AuthData;\n  isLoading = false;\n  signupFormGroup: FormGroup\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit() {\n    this.signupFormGroup = new FormGroup({\n      userName: new FormControl(''),\n      password: new FormControl('')\n    })\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        console.log(\"signup component ngOnInit authStatus data \" + authStatus);\n        this.isLoading = false;\n      }\n    );\n  }\n\n  onSignup(){\n    this.user = this.signupFormGroup.value;\n    this.isLoading = true;\n    this.authService.createUser(\n      this.user.userName,\n      this.user.password\n    );\n    \n  }\n\n  ngOnDestroy(){\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<div class=\"container\" id=\"card_top\">\n    <div class=\"card card-body\">\n      <div class=\"spinner-border\" role=\"status\" *ngIf=\"isLoading\">\n    </div>\n      <form [formGroup]=\"signupFormGroup\" (submit)=\"onSignup()\" *ngIf=\"!isLoading\">\n          <div class=\"form-group\">\n            <label for=\"inputText\">User Name</label>\n            <input type=\"text\"  class=\"form-control\" formControlName=\"userName\">\n          </div>\n        <div class=\"form-group\">\n          <label for=\"inputLanguage\">Password</label>\n          <input type=\"password\"  class=\"form-control\" formControlName=\"password\">\n        </div>\n       <button class=\"btn text-white btn-xl text-uppercase float-right\" style=\"background-color: #5fbae9;\" type=\"submit\" *ngIf=\"!isLoading\">Sign Up</button>\n       </form>\n    </div>\n    </div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { AuthService } from '../../../services/auth.service';\n\nimport { AuthData } from '../../../models/auth-data.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  user: AuthData;\n  isLoading = false;\n  loginFormGroup: FormGroup;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.loginFormGroup = new FormGroup({\n      userName: new FormControl(''),\n      password: new FormControl('')\n    });\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    )\n  }\n\n  onLogin(){\n    this.user = this.loginFormGroup.value\n    if(!this.user){\n      return;\n    }\n    this.isLoading = true;\n    this.authService.login(this.user.userName, this.user.password);\n\n  }\n\n  ngOnDestroy(){\n    this.authStatusSub.unsubscribe()\n  }\n\n}\n","<div class=\"container\" id=\"card_top\">\n<div class=\"card card-body\">\n  <div class=\"spinner-border\" role=\"status\" *ngIf=\"isLoading\">\n  </div>\n  <form [formGroup]=\"loginFormGroup\" (submit)=\"onLogin()\" *ngIf=\"!isLoading\">\n      <div class=\"form-group\">\n        <label for=\"inputText\">User Name</label>\n        <input type=\"text\"  class=\"form-control\" formControlName=\"userName\">\n      </div>\n    <div class=\"form-group\">\n      <label for=\"inputLanguage\">Password</label>\n      <input type=\"password\"  class=\"form-control\" formControlName=\"password\">\n    </div>\n   <button class=\"btn text-white btn-xl text-uppercase float-right\" style=\"background-color: #5fbae9;\" type=\"submit\" *ngIf=\"!isLoading\">Log In</button>\n   </form>\n</div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AngularMaterialModule } from 'src/app/angular-material.module';\nimport { FormsModule } from '@angular/forms';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\n\n@NgModule({\n    declarations: [\n        LoginComponent,\n        SignupComponent\n    ],\n    imports: [\n        CommonModule,\n        AngularMaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AuthRoutingModule\n    ]\n})\n\nexport class AuthModule{}","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes:Routes = [\n    { path: \"login\", component: LoginComponent },\n    { path: \"signup\", component: SignupComponent }\n]\n\n@NgModule({\n    imports:[\n        RouterModule.forChild(routes)\n    ],\n    exports:[\n        RouterModule\n    ]\n\n})\n\nexport class AuthRoutingModule{}"],"sourceRoot":"webpack:///"}